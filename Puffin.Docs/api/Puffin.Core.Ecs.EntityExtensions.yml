### YamlMime:ManagedReference
items:
- uid: Puffin.Core.Ecs.EntityExtensions
  commentId: T:Puffin.Core.Ecs.EntityExtensions
  id: EntityExtensions
  parent: Puffin.Core.Ecs
  children:
  - Puffin.Core.Ecs.EntityExtensions.FourWayMovement(Puffin.Core.Ecs.Entity,System.Int32)
  - Puffin.Core.Ecs.EntityExtensions.Keyboard(Puffin.Core.Ecs.Entity)
  - Puffin.Core.Ecs.EntityExtensions.Label(Puffin.Core.Ecs.Entity,System.String)
  - Puffin.Core.Ecs.EntityExtensions.Mouse(Puffin.Core.Ecs.Entity,System.Action,System.Int32,System.Int32)
  - Puffin.Core.Ecs.EntityExtensions.Move(Puffin.Core.Ecs.Entity,System.Int32,System.Int32)
  - Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32)
  - Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32)
  - Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{Puffin.Core.Ecs.Entity})
  - Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{Puffin.Core.Ecs.Entity},System.Action{Puffin.Core.Ecs.Entity})
  - Puffin.Core.Ecs.EntityExtensions.Sprite(Puffin.Core.Ecs.Entity,System.String)
  - Puffin.Core.Ecs.EntityExtensions.Spritesheet(Puffin.Core.Ecs.Entity,System.String,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: Puffin.Core.Ecs.EntityExtensions
  type: Class
  source:
    remote:
      path: Puffin.Core/Ecs/EntityExtensions.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: EntityExtensions
    path: ../Puffin.Core/Ecs/EntityExtensions.cs
    startLine: 9
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs
  summary: "\nStatic extensions for Entity. You can chain them together, eg.\nEntity.Sprite(&quot;player.png&quot;).Move(200, 100);\n"
  example: []
  syntax:
    content: public static class EntityExtensions
    content.vb: Public Module EntityExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Puffin.Core.Ecs.EntityExtensions.Move(Puffin.Core.Ecs.Entity,System.Int32,System.Int32)
  commentId: M:Puffin.Core.Ecs.EntityExtensions.Move(Puffin.Core.Ecs.Entity,System.Int32,System.Int32)
  id: Move(Puffin.Core.Ecs.Entity,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: Puffin.Core.Ecs.EntityExtensions
  langs:
  - csharp
  - vb
  name: Move(Entity, Int32, Int32)
  nameWithType: EntityExtensions.Move(Entity, Int32, Int32)
  fullName: Puffin.Core.Ecs.EntityExtensions.Move(Puffin.Core.Ecs.Entity, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Puffin.Core/Ecs/EntityExtensions.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: Move
    path: ../Puffin.Core/Ecs/EntityExtensions.cs
    startLine: 14
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs
  summary: "\nMoves an entity to the specified coordinates.\n"
  example: []
  syntax:
    content: public static Entity Move(this Entity entity, int x, int y)
    parameters:
    - id: entity
      type: Puffin.Core.Ecs.Entity
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: Puffin.Core.Ecs.Entity
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Move(entity As Entity, x As Integer, y As Integer) As Entity
  overload: Puffin.Core.Ecs.EntityExtensions.Move*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Puffin.Core.Ecs.EntityExtensions.Sprite(Puffin.Core.Ecs.Entity,System.String)
  commentId: M:Puffin.Core.Ecs.EntityExtensions.Sprite(Puffin.Core.Ecs.Entity,System.String)
  id: Sprite(Puffin.Core.Ecs.Entity,System.String)
  isExtensionMethod: true
  parent: Puffin.Core.Ecs.EntityExtensions
  langs:
  - csharp
  - vb
  name: Sprite(Entity, String)
  nameWithType: EntityExtensions.Sprite(Entity, String)
  fullName: Puffin.Core.Ecs.EntityExtensions.Sprite(Puffin.Core.Ecs.Entity, System.String)
  type: Method
  source:
    remote:
      path: Puffin.Core/Ecs/EntityExtensions.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: Sprite
    path: ../Puffin.Core/Ecs/EntityExtensions.cs
    startLine: 24
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs
  summary: "\nLoads the specified image as a sprite on an entity.\n"
  example: []
  syntax:
    content: public static Entity Sprite(this Entity entity, string imageFile)
    parameters:
    - id: entity
      type: Puffin.Core.Ecs.Entity
    - id: imageFile
      type: System.String
    return:
      type: Puffin.Core.Ecs.Entity
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Sprite(entity As Entity, imageFile As String) As Entity
  overload: Puffin.Core.Ecs.EntityExtensions.Sprite*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Puffin.Core.Ecs.EntityExtensions.Spritesheet(Puffin.Core.Ecs.Entity,System.String,System.Int32,System.Int32)
  commentId: M:Puffin.Core.Ecs.EntityExtensions.Spritesheet(Puffin.Core.Ecs.Entity,System.String,System.Int32,System.Int32)
  id: Spritesheet(Puffin.Core.Ecs.Entity,System.String,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: Puffin.Core.Ecs.EntityExtensions
  langs:
  - csharp
  - vb
  name: Spritesheet(Entity, String, Int32, Int32)
  nameWithType: EntityExtensions.Spritesheet(Entity, String, Int32, Int32)
  fullName: Puffin.Core.Ecs.EntityExtensions.Spritesheet(Puffin.Core.Ecs.Entity, System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Puffin.Core/Ecs/EntityExtensions.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: Spritesheet
    path: ../Puffin.Core/Ecs/EntityExtensions.cs
    startLine: 33
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs
  summary: "\nLoads and adds the specified image as a spritesheet to an entity.\n"
  example: []
  syntax:
    content: public static Entity Spritesheet(this Entity entity, string imageFile, int frameWidth, int frameHeight)
    parameters:
    - id: entity
      type: Puffin.Core.Ecs.Entity
    - id: imageFile
      type: System.String
    - id: frameWidth
      type: System.Int32
    - id: frameHeight
      type: System.Int32
    return:
      type: Puffin.Core.Ecs.Entity
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Spritesheet(entity As Entity, imageFile As String, frameWidth As Integer, frameHeight As Integer) As Entity
  overload: Puffin.Core.Ecs.EntityExtensions.Spritesheet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Puffin.Core.Ecs.EntityExtensions.Label(Puffin.Core.Ecs.Entity,System.String)
  commentId: M:Puffin.Core.Ecs.EntityExtensions.Label(Puffin.Core.Ecs.Entity,System.String)
  id: Label(Puffin.Core.Ecs.Entity,System.String)
  isExtensionMethod: true
  parent: Puffin.Core.Ecs.EntityExtensions
  langs:
  - csharp
  - vb
  name: Label(Entity, String)
  nameWithType: EntityExtensions.Label(Entity, String)
  fullName: Puffin.Core.Ecs.EntityExtensions.Label(Puffin.Core.Ecs.Entity, System.String)
  type: Method
  source:
    remote:
      path: Puffin.Core/Ecs/EntityExtensions.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: Label
    path: ../Puffin.Core/Ecs/EntityExtensions.cs
    startLine: 42
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs
  summary: "\nAdds a label with the specified text to an entity.\n"
  example: []
  syntax:
    content: public static Entity Label(this Entity entity, string text)
    parameters:
    - id: entity
      type: Puffin.Core.Ecs.Entity
    - id: text
      type: System.String
    return:
      type: Puffin.Core.Ecs.Entity
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Label(entity As Entity, text As String) As Entity
  overload: Puffin.Core.Ecs.EntityExtensions.Label*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Puffin.Core.Ecs.EntityExtensions.Mouse(Puffin.Core.Ecs.Entity,System.Action,System.Int32,System.Int32)
  commentId: M:Puffin.Core.Ecs.EntityExtensions.Mouse(Puffin.Core.Ecs.Entity,System.Action,System.Int32,System.Int32)
  id: Mouse(Puffin.Core.Ecs.Entity,System.Action,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: Puffin.Core.Ecs.EntityExtensions
  langs:
  - csharp
  - vb
  name: Mouse(Entity, Action, Int32, Int32)
  nameWithType: EntityExtensions.Mouse(Entity, Action, Int32, Int32)
  fullName: Puffin.Core.Ecs.EntityExtensions.Mouse(Puffin.Core.Ecs.Entity, System.Action, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Puffin.Core/Ecs/EntityExtensions.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: Mouse
    path: ../Puffin.Core/Ecs/EntityExtensions.cs
    startLine: 52
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs
  summary: "\nAllows an entity to handle mouse events; the specified callback will be invoked on every click.\nThe width and height define the clickable area (relative to the origin of the entity).\n"
  example: []
  syntax:
    content: public static Entity Mouse(this Entity entity, Action onClick, int width, int height)
    parameters:
    - id: entity
      type: Puffin.Core.Ecs.Entity
    - id: onClick
      type: System.Action
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    return:
      type: Puffin.Core.Ecs.Entity
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Mouse(entity As Entity, onClick As Action, width As Integer, height As Integer) As Entity
  overload: Puffin.Core.Ecs.EntityExtensions.Mouse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Puffin.Core.Ecs.EntityExtensions.Keyboard(Puffin.Core.Ecs.Entity)
  commentId: M:Puffin.Core.Ecs.EntityExtensions.Keyboard(Puffin.Core.Ecs.Entity)
  id: Keyboard(Puffin.Core.Ecs.Entity)
  isExtensionMethod: true
  parent: Puffin.Core.Ecs.EntityExtensions
  langs:
  - csharp
  - vb
  name: Keyboard(Entity)
  nameWithType: EntityExtensions.Keyboard(Entity)
  fullName: Puffin.Core.Ecs.EntityExtensions.Keyboard(Puffin.Core.Ecs.Entity)
  type: Method
  source:
    remote:
      path: Puffin.Core/Ecs/EntityExtensions.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: Keyboard
    path: ../Puffin.Core/Ecs/EntityExtensions.cs
    startLine: 61
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs
  summary: "\nExposes a method that allows an entity to check/respond to actions/keys.\n"
  example: []
  syntax:
    content: public static Entity Keyboard(this Entity entity)
    parameters:
    - id: entity
      type: Puffin.Core.Ecs.Entity
    return:
      type: Puffin.Core.Ecs.Entity
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Keyboard(entity As Entity) As Entity
  overload: Puffin.Core.Ecs.EntityExtensions.Keyboard*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Puffin.Core.Ecs.EntityExtensions.FourWayMovement(Puffin.Core.Ecs.Entity,System.Int32)
  commentId: M:Puffin.Core.Ecs.EntityExtensions.FourWayMovement(Puffin.Core.Ecs.Entity,System.Int32)
  id: FourWayMovement(Puffin.Core.Ecs.Entity,System.Int32)
  isExtensionMethod: true
  parent: Puffin.Core.Ecs.EntityExtensions
  langs:
  - csharp
  - vb
  name: FourWayMovement(Entity, Int32)
  nameWithType: EntityExtensions.FourWayMovement(Entity, Int32)
  fullName: Puffin.Core.Ecs.EntityExtensions.FourWayMovement(Puffin.Core.Ecs.Entity, System.Int32)
  type: Method
  source:
    remote:
      path: Puffin.Core/Ecs/EntityExtensions.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: FourWayMovement
    path: ../Puffin.Core/Ecs/EntityExtensions.cs
    startLine: 71
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs
  summary: "\nMakes the entity move in four directions in response to WASD or arrow keys.\nThe entity moves at the specified speed, in pixels per second.\n"
  example: []
  syntax:
    content: public static Entity FourWayMovement(this Entity entity, int speed)
    parameters:
    - id: entity
      type: Puffin.Core.Ecs.Entity
    - id: speed
      type: System.Int32
    return:
      type: Puffin.Core.Ecs.Entity
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FourWayMovement(entity As Entity, speed As Integer) As Entity
  overload: Puffin.Core.Ecs.EntityExtensions.FourWayMovement*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32)
  commentId: M:Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32)
  id: Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: Puffin.Core.Ecs.EntityExtensions
  langs:
  - csharp
  - vb
  name: Overlap(Entity, Int32, Int32)
  nameWithType: EntityExtensions.Overlap(Entity, Int32, Int32)
  fullName: Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Puffin.Core/Ecs/EntityExtensions.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: Overlap
    path: ../Puffin.Core/Ecs/EntityExtensions.cs
    startLine: 81
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs
  summary: "\nCauses an entity to trigger overlap events with other entities that have an overlap component.\nWidth/height are the overlap area of this entity, relative to the origin.\n"
  example: []
  syntax:
    content: public static Entity Overlap(this Entity entity, int width, int height)
    parameters:
    - id: entity
      type: Puffin.Core.Ecs.Entity
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    return:
      type: Puffin.Core.Ecs.Entity
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Overlap(entity As Entity, width As Integer, height As Integer) As Entity
  overload: Puffin.Core.Ecs.EntityExtensions.Overlap*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: Puffin.Core.Ecs.EntityExtensions
  langs:
  - csharp
  - vb
  name: Overlap(Entity, Int32, Int32, Int32, Int32)
  nameWithType: EntityExtensions.Overlap(Entity, Int32, Int32, Int32, Int32)
  fullName: Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Puffin.Core/Ecs/EntityExtensions.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: Overlap
    path: ../Puffin.Core/Ecs/EntityExtensions.cs
    startLine: 92
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs
  summary: "\nCauses an entity to trigger overlap events with other entities that have an overlap component.\nWidth/height are the overlap area of this entity, relative to the origin.\nOffset coordinates specify the offset of the overlap region relative to the origin of the entity.\n"
  example: []
  syntax:
    content: public static Entity Overlap(this Entity entity, int width, int height, int offsetX, int offsetY)
    parameters:
    - id: entity
      type: Puffin.Core.Ecs.Entity
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    - id: offsetX
      type: System.Int32
    - id: offsetY
      type: System.Int32
    return:
      type: Puffin.Core.Ecs.Entity
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Overlap(entity As Entity, width As Integer, height As Integer, offsetX As Integer, offsetY As Integer) As Entity
  overload: Puffin.Core.Ecs.EntityExtensions.Overlap*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{Puffin.Core.Ecs.Entity})
  commentId: M:Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{Puffin.Core.Ecs.Entity})
  id: Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{Puffin.Core.Ecs.Entity})
  isExtensionMethod: true
  parent: Puffin.Core.Ecs.EntityExtensions
  langs:
  - csharp
  - vb
  name: Overlap(Entity, Int32, Int32, Int32, Int32, Action<Entity>)
  nameWithType: EntityExtensions.Overlap(Entity, Int32, Int32, Int32, Int32, Action<Entity>)
  fullName: Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity, System.Int32, System.Int32, System.Int32, System.Int32, System.Action<Puffin.Core.Ecs.Entity>)
  type: Method
  source:
    remote:
      path: Puffin.Core/Ecs/EntityExtensions.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: Overlap
    path: ../Puffin.Core/Ecs/EntityExtensions.cs
    startLine: 104
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs
  summary: "\nCauses an entity to trigger overlap events with other entities that have an overlap component.\nWidth/height are the overlap area of this entity, relative to the origin.\nOffset coordinates specify the offset of the overlap region relative to the origin of the entity.\nonStartOverlap triggers whenever another entity with an overlap component starts overlapping this entity.\n"
  example: []
  syntax:
    content: public static Entity Overlap(this Entity entity, int width, int height, int offsetX, int offsetY, Action<Entity> onStartOverlap)
    parameters:
    - id: entity
      type: Puffin.Core.Ecs.Entity
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    - id: offsetX
      type: System.Int32
    - id: offsetY
      type: System.Int32
    - id: onStartOverlap
      type: System.Action{Puffin.Core.Ecs.Entity}
    return:
      type: Puffin.Core.Ecs.Entity
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Overlap(entity As Entity, width As Integer, height As Integer, offsetX As Integer, offsetY As Integer, onStartOverlap As Action(Of Entity)) As Entity
  overload: Puffin.Core.Ecs.EntityExtensions.Overlap*
  nameWithType.vb: EntityExtensions.Overlap(Entity, Int32, Int32, Int32, Int32, Action(Of Entity))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity, System.Int32, System.Int32, System.Int32, System.Int32, System.Action(Of Puffin.Core.Ecs.Entity))
  name.vb: Overlap(Entity, Int32, Int32, Int32, Int32, Action(Of Entity))
- uid: Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{Puffin.Core.Ecs.Entity},System.Action{Puffin.Core.Ecs.Entity})
  commentId: M:Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{Puffin.Core.Ecs.Entity},System.Action{Puffin.Core.Ecs.Entity})
  id: Overlap(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{Puffin.Core.Ecs.Entity},System.Action{Puffin.Core.Ecs.Entity})
  isExtensionMethod: true
  parent: Puffin.Core.Ecs.EntityExtensions
  langs:
  - csharp
  - vb
  name: Overlap(Entity, Int32, Int32, Int32, Int32, Action<Entity>, Action<Entity>)
  nameWithType: EntityExtensions.Overlap(Entity, Int32, Int32, Int32, Int32, Action<Entity>, Action<Entity>)
  fullName: Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity, System.Int32, System.Int32, System.Int32, System.Int32, System.Action<Puffin.Core.Ecs.Entity>, System.Action<Puffin.Core.Ecs.Entity>)
  type: Method
  source:
    remote:
      path: Puffin.Core/Ecs/EntityExtensions.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: Overlap
    path: ../Puffin.Core/Ecs/EntityExtensions.cs
    startLine: 118
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs
  summary: "\nCauses an entity to trigger overlap events with other entities that have an overlap component.\nWidth/height are the overlap area of this entity, relative to the origin.\nOffset coordinates specify the offset of the overlap region relative to the origin of the entity.\nonStartOverlap triggers whenever another entity with an overlap component starts overlapping this entity.\nonStopOverlap triggers whenever another entity with an overlap component stops overlapping overlaps this entity.\n"
  example: []
  syntax:
    content: public static Entity Overlap(this Entity entity, int width, int height, int offsetX, int offsetY, Action<Entity> onStartOverlap, Action<Entity> onStopOverlap)
    parameters:
    - id: entity
      type: Puffin.Core.Ecs.Entity
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    - id: offsetX
      type: System.Int32
    - id: offsetY
      type: System.Int32
    - id: onStartOverlap
      type: System.Action{Puffin.Core.Ecs.Entity}
    - id: onStopOverlap
      type: System.Action{Puffin.Core.Ecs.Entity}
    return:
      type: Puffin.Core.Ecs.Entity
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Overlap(entity As Entity, width As Integer, height As Integer, offsetX As Integer, offsetY As Integer, onStartOverlap As Action(Of Entity), onStopOverlap As Action(Of Entity)) As Entity
  overload: Puffin.Core.Ecs.EntityExtensions.Overlap*
  nameWithType.vb: EntityExtensions.Overlap(Entity, Int32, Int32, Int32, Int32, Action(Of Entity), Action(Of Entity))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Puffin.Core.Ecs.EntityExtensions.Overlap(Puffin.Core.Ecs.Entity, System.Int32, System.Int32, System.Int32, System.Int32, System.Action(Of Puffin.Core.Ecs.Entity), System.Action(Of Puffin.Core.Ecs.Entity))
  name.vb: Overlap(Entity, Int32, Int32, Int32, Int32, Action(Of Entity), Action(Of Entity))
references:
- uid: Puffin.Core.Ecs
  commentId: N:Puffin.Core.Ecs
  name: Puffin.Core.Ecs
  nameWithType: Puffin.Core.Ecs
  fullName: Puffin.Core.Ecs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Puffin.Core.Ecs.EntityExtensions.Move*
  commentId: Overload:Puffin.Core.Ecs.EntityExtensions.Move
  name: Move
  nameWithType: EntityExtensions.Move
  fullName: Puffin.Core.Ecs.EntityExtensions.Move
- uid: Puffin.Core.Ecs.Entity
  commentId: T:Puffin.Core.Ecs.Entity
  parent: Puffin.Core.Ecs
  name: Entity
  nameWithType: Entity
  fullName: Puffin.Core.Ecs.Entity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Puffin.Core.Ecs.EntityExtensions.Sprite*
  commentId: Overload:Puffin.Core.Ecs.EntityExtensions.Sprite
  name: Sprite
  nameWithType: EntityExtensions.Sprite
  fullName: Puffin.Core.Ecs.EntityExtensions.Sprite
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Puffin.Core.Ecs.EntityExtensions.Spritesheet*
  commentId: Overload:Puffin.Core.Ecs.EntityExtensions.Spritesheet
  name: Spritesheet
  nameWithType: EntityExtensions.Spritesheet
  fullName: Puffin.Core.Ecs.EntityExtensions.Spritesheet
- uid: Puffin.Core.Ecs.EntityExtensions.Label*
  commentId: Overload:Puffin.Core.Ecs.EntityExtensions.Label
  name: Label
  nameWithType: EntityExtensions.Label
  fullName: Puffin.Core.Ecs.EntityExtensions.Label
- uid: Puffin.Core.Ecs.EntityExtensions.Mouse*
  commentId: Overload:Puffin.Core.Ecs.EntityExtensions.Mouse
  name: Mouse
  nameWithType: EntityExtensions.Mouse
  fullName: Puffin.Core.Ecs.EntityExtensions.Mouse
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Puffin.Core.Ecs.EntityExtensions.Keyboard*
  commentId: Overload:Puffin.Core.Ecs.EntityExtensions.Keyboard
  name: Keyboard
  nameWithType: EntityExtensions.Keyboard
  fullName: Puffin.Core.Ecs.EntityExtensions.Keyboard
- uid: Puffin.Core.Ecs.EntityExtensions.FourWayMovement*
  commentId: Overload:Puffin.Core.Ecs.EntityExtensions.FourWayMovement
  name: FourWayMovement
  nameWithType: EntityExtensions.FourWayMovement
  fullName: Puffin.Core.Ecs.EntityExtensions.FourWayMovement
- uid: Puffin.Core.Ecs.EntityExtensions.Overlap*
  commentId: Overload:Puffin.Core.Ecs.EntityExtensions.Overlap
  name: Overlap
  nameWithType: EntityExtensions.Overlap
  fullName: Puffin.Core.Ecs.EntityExtensions.Overlap
- uid: System.Action{Puffin.Core.Ecs.Entity}
  commentId: T:System.Action{Puffin.Core.Ecs.Entity}
  parent: System
  definition: System.Action`1
  name: Action<Entity>
  nameWithType: Action<Entity>
  fullName: System.Action<Puffin.Core.Ecs.Entity>
  nameWithType.vb: Action(Of Entity)
  fullName.vb: System.Action(Of Puffin.Core.Ecs.Entity)
  name.vb: Action(Of Entity)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Puffin.Core.Ecs.Entity
    name: Entity
    nameWithType: Entity
    fullName: Puffin.Core.Ecs.Entity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Puffin.Core.Ecs.Entity
    name: Entity
    nameWithType: Entity
    fullName: Puffin.Core.Ecs.Entity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
