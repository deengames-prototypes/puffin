### YamlMime:ManagedReference
items:
- uid: Puffin.Infrastructure.MonoGame.PuffinGame
  commentId: T:Puffin.Infrastructure.MonoGame.PuffinGame
  id: PuffinGame
  parent: Puffin.Infrastructure.MonoGame
  children:
  - Puffin.Infrastructure.MonoGame.PuffinGame.#ctor(System.Int32,System.Int32)
  - Puffin.Infrastructure.MonoGame.PuffinGame.ActionToKeys
  - Puffin.Infrastructure.MonoGame.PuffinGame.Draw(Microsoft.Xna.Framework.GameTime)
  - Puffin.Infrastructure.MonoGame.PuffinGame.Initialize
  - Puffin.Infrastructure.MonoGame.PuffinGame.LoadContent
  - Puffin.Infrastructure.MonoGame.PuffinGame.Ready
  - Puffin.Infrastructure.MonoGame.PuffinGame.ShowScene(Puffin.Core.Scene)
  - Puffin.Infrastructure.MonoGame.PuffinGame.Update(Microsoft.Xna.Framework.GameTime)
  langs:
  - csharp
  - vb
  name: PuffinGame
  nameWithType: PuffinGame
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame
  type: Class
  source:
    remote:
      path: Puffin.Infrastructure.MonoGame/PuffinGame.cs
      branch: documentation
      repo: https://github.com/nightblade9/puffin-engine.git
    id: PuffinGame
    path: ../Puffin.Infrastructure.MonoGame/PuffinGame.cs
    startLine: 20
  assemblies:
  - Puffin.Infrastructure.MonoGame
  namespace: Puffin.Infrastructure.MonoGame
  summary: "\nThe core game class, the starting-point of your application. Manages scenes.\nYou can set the size and background colour of your game.\n"
  example: []
  syntax:
    content: 'public abstract class PuffinGame : Game, IDisposable'
    content.vb: >-
      Public MustInherit Class PuffinGame
          Inherits Game
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Game
  implements:
  - System.IDisposable
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.ActionToKeys
  commentId: F:Puffin.Infrastructure.MonoGame.PuffinGame.ActionToKeys
  id: ActionToKeys
  parent: Puffin.Infrastructure.MonoGame.PuffinGame
  langs:
  - csharp
  - vb
  name: ActionToKeys
  nameWithType: PuffinGame.ActionToKeys
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.ActionToKeys
  type: Field
  source:
    remote:
      path: Puffin.Infrastructure.MonoGame/PuffinGame.cs
      branch: documentation
      repo: https://github.com/nightblade9/puffin-engine.git
    id: ActionToKeys
    path: ../Puffin.Infrastructure.MonoGame/PuffinGame.cs
    startLine: 28
  assemblies:
  - Puffin.Infrastructure.MonoGame
  namespace: Puffin.Infrastructure.MonoGame
  summary: "\nA mapping of in-game actions to the (MonoGame) keyboard keys that map to them.\nPuffinGame ships with default mappings for all actions; you can override these\nto change keyboard bindings, or expose them in a UI and allow users to arbitrarily\noverride keyboard mappings (for accessibility).\n"
  example: []
  syntax:
    content: public Dictionary<Enum, List<Keys>> ActionToKeys
    return:
      type: System.Collections.Generic.Dictionary{System.Enum,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}
    content.vb: Public ActionToKeys As Dictionary(Of  Enum, List(Of Keys))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.#ctor(System.Int32,System.Int32)
  commentId: M:Puffin.Infrastructure.MonoGame.PuffinGame.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: Puffin.Infrastructure.MonoGame.PuffinGame
  langs:
  - csharp
  - vb
  name: PuffinGame(Int32, Int32)
  nameWithType: PuffinGame.PuffinGame(Int32, Int32)
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.PuffinGame(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Puffin.Infrastructure.MonoGame/PuffinGame.cs
      branch: documentation
      repo: https://github.com/nightblade9/puffin-engine.git
    id: .ctor
    path: ../Puffin.Infrastructure.MonoGame/PuffinGame.cs
    startLine: 44
  assemblies:
  - Puffin.Infrastructure.MonoGame
  namespace: Puffin.Infrastructure.MonoGame
  syntax:
    content: public PuffinGame(int gameWidth, int gameHeight)
    parameters:
    - id: gameWidth
      type: System.Int32
    - id: gameHeight
      type: System.Int32
    content.vb: Public Sub New(gameWidth As Integer, gameHeight As Integer)
  overload: Puffin.Infrastructure.MonoGame.PuffinGame.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.ShowScene(Puffin.Core.Scene)
  commentId: M:Puffin.Infrastructure.MonoGame.PuffinGame.ShowScene(Puffin.Core.Scene)
  id: ShowScene(Puffin.Core.Scene)
  parent: Puffin.Infrastructure.MonoGame.PuffinGame
  langs:
  - csharp
  - vb
  name: ShowScene(Scene)
  nameWithType: PuffinGame.ShowScene(Scene)
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.ShowScene(Puffin.Core.Scene)
  type: Method
  source:
    remote:
      path: Puffin.Infrastructure.MonoGame/PuffinGame.cs
      branch: documentation
      repo: https://github.com/nightblade9/puffin-engine.git
    id: ShowScene
    path: ../Puffin.Infrastructure.MonoGame/PuffinGame.cs
    startLine: 61
  assemblies:
  - Puffin.Infrastructure.MonoGame
  namespace: Puffin.Infrastructure.MonoGame
  syntax:
    content: public void ShowScene(Scene s)
    parameters:
    - id: s
      type: Puffin.Core.Scene
    content.vb: Public Sub ShowScene(s As Scene)
  overload: Puffin.Infrastructure.MonoGame.PuffinGame.ShowScene*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.Ready
  commentId: M:Puffin.Infrastructure.MonoGame.PuffinGame.Ready
  id: Ready
  parent: Puffin.Infrastructure.MonoGame.PuffinGame
  langs:
  - csharp
  - vb
  name: Ready()
  nameWithType: PuffinGame.Ready()
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.Ready()
  type: Method
  source:
    remote:
      path: Puffin.Infrastructure.MonoGame/PuffinGame.cs
      branch: documentation
      repo: https://github.com/nightblade9/puffin-engine.git
    id: Ready
    path: ../Puffin.Infrastructure.MonoGame/PuffinGame.cs
    startLine: 87
  assemblies:
  - Puffin.Infrastructure.MonoGame
  namespace: Puffin.Infrastructure.MonoGame
  summary: "\nCalled when your game is ready to run (graphics initialized, etc.)\n"
  example: []
  syntax:
    content: protected virtual void Ready()
    content.vb: Protected Overridable Sub Ready
  overload: Puffin.Infrastructure.MonoGame.PuffinGame.Ready*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.Initialize
  commentId: M:Puffin.Infrastructure.MonoGame.PuffinGame.Initialize
  id: Initialize
  parent: Puffin.Infrastructure.MonoGame.PuffinGame
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: PuffinGame.Initialize()
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.Initialize()
  type: Method
  source:
    remote:
      path: Puffin.Infrastructure.MonoGame/PuffinGame.cs
      branch: documentation
      repo: https://github.com/nightblade9/puffin-engine.git
    id: Initialize
    path: ../Puffin.Infrastructure.MonoGame/PuffinGame.cs
    startLine: 92
  assemblies:
  - Puffin.Infrastructure.MonoGame
  namespace: Puffin.Infrastructure.MonoGame
  syntax:
    content: protected override void Initialize()
    content.vb: Protected Overrides Sub Initialize
  overridden: Microsoft.Xna.Framework.Game.Initialize
  overload: Puffin.Infrastructure.MonoGame.PuffinGame.Initialize*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.LoadContent
  commentId: M:Puffin.Infrastructure.MonoGame.PuffinGame.LoadContent
  id: LoadContent
  parent: Puffin.Infrastructure.MonoGame.PuffinGame
  langs:
  - csharp
  - vb
  name: LoadContent()
  nameWithType: PuffinGame.LoadContent()
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.LoadContent()
  type: Method
  source:
    remote:
      path: Puffin.Infrastructure.MonoGame/PuffinGame.cs
      branch: documentation
      repo: https://github.com/nightblade9/puffin-engine.git
    id: LoadContent
    path: ../Puffin.Infrastructure.MonoGame/PuffinGame.cs
    startLine: 98
  assemblies:
  - Puffin.Infrastructure.MonoGame
  namespace: Puffin.Infrastructure.MonoGame
  syntax:
    content: protected override void LoadContent()
    content.vb: Protected Overrides Sub LoadContent
  overridden: Microsoft.Xna.Framework.Game.LoadContent
  overload: Puffin.Infrastructure.MonoGame.PuffinGame.LoadContent*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:Puffin.Infrastructure.MonoGame.PuffinGame.Update(Microsoft.Xna.Framework.GameTime)
  id: Update(Microsoft.Xna.Framework.GameTime)
  parent: Puffin.Infrastructure.MonoGame.PuffinGame
  langs:
  - csharp
  - vb
  name: Update(GameTime)
  nameWithType: PuffinGame.Update(GameTime)
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.Update(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: Puffin.Infrastructure.MonoGame/PuffinGame.cs
      branch: documentation
      repo: https://github.com/nightblade9/puffin-engine.git
    id: Update
    path: ../Puffin.Infrastructure.MonoGame/PuffinGame.cs
    startLine: 105
  assemblies:
  - Puffin.Infrastructure.MonoGame
  namespace: Puffin.Infrastructure.MonoGame
  syntax:
    content: protected override void Update(GameTime gameTime)
    parameters:
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
    content.vb: Protected Overrides Sub Update(gameTime As GameTime)
  overridden: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  overload: Puffin.Infrastructure.MonoGame.PuffinGame.Update*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.Draw(Microsoft.Xna.Framework.GameTime)
  commentId: M:Puffin.Infrastructure.MonoGame.PuffinGame.Draw(Microsoft.Xna.Framework.GameTime)
  id: Draw(Microsoft.Xna.Framework.GameTime)
  parent: Puffin.Infrastructure.MonoGame.PuffinGame
  langs:
  - csharp
  - vb
  name: Draw(GameTime)
  nameWithType: PuffinGame.Draw(GameTime)
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.Draw(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: Puffin.Infrastructure.MonoGame/PuffinGame.cs
      branch: documentation
      repo: https://github.com/nightblade9/puffin-engine.git
    id: Draw
    path: ../Puffin.Infrastructure.MonoGame/PuffinGame.cs
    startLine: 113
  assemblies:
  - Puffin.Infrastructure.MonoGame
  namespace: Puffin.Infrastructure.MonoGame
  syntax:
    content: protected override void Draw(GameTime gameTime)
    parameters:
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
    content.vb: Protected Overrides Sub Draw(gameTime As GameTime)
  overridden: Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
  overload: Puffin.Infrastructure.MonoGame.PuffinGame.Draw*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Puffin.Infrastructure.MonoGame
  commentId: N:Puffin.Infrastructure.MonoGame
  name: Puffin.Infrastructure.MonoGame
  nameWithType: Puffin.Infrastructure.MonoGame
  fullName: Puffin.Infrastructure.MonoGame
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Game
  commentId: T:Microsoft.Xna.Framework.Game
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Game
  nameWithType: Game
  fullName: Microsoft.Xna.Framework.Game
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System.Collections.Generic.Dictionary{System.Enum,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}
  commentId: T:System.Collections.Generic.Dictionary{System.Enum,System.Collections.Generic.List{Microsoft.Xna.Framework.Input.Keys}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Enum, List<Keys>>
  nameWithType: Dictionary<Enum, List<Keys>>
  fullName: System.Collections.Generic.Dictionary<System.Enum, System.Collections.Generic.List<Microsoft.Xna.Framework.Input.Keys>>
  nameWithType.vb: Dictionary(Of Enum, List(Of Keys))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Enum, System.Collections.Generic.List(Of Microsoft.Xna.Framework.Input.Keys))
  name.vb: Dictionary(Of Enum, List(Of Keys))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    nameWithType: Keys
    fullName: Microsoft.Xna.Framework.Input.Keys
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Enum
    name: Enum
    nameWithType: Enum
    fullName: System.Enum
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    nameWithType: Keys
    fullName: Microsoft.Xna.Framework.Input.Keys
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.#ctor*
  commentId: Overload:Puffin.Infrastructure.MonoGame.PuffinGame.#ctor
  name: PuffinGame
  nameWithType: PuffinGame.PuffinGame
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.PuffinGame
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.ShowScene*
  commentId: Overload:Puffin.Infrastructure.MonoGame.PuffinGame.ShowScene
  name: ShowScene
  nameWithType: PuffinGame.ShowScene
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.ShowScene
- uid: Puffin.Core.Scene
  commentId: T:Puffin.Core.Scene
  parent: Puffin.Core
  name: Scene
  nameWithType: Scene
  fullName: Puffin.Core.Scene
- uid: Puffin.Core
  commentId: N:Puffin.Core
  name: Puffin.Core
  nameWithType: Puffin.Core
  fullName: Puffin.Core
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.Ready*
  commentId: Overload:Puffin.Infrastructure.MonoGame.PuffinGame.Ready
  name: Ready
  nameWithType: PuffinGame.Ready
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.Ready
- uid: Microsoft.Xna.Framework.Game.Initialize
  commentId: M:Microsoft.Xna.Framework.Game.Initialize
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Initialize()
  nameWithType: Game.Initialize()
  fullName: Microsoft.Xna.Framework.Game.Initialize()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Initialize
    name: Initialize
    nameWithType: Game.Initialize
    fullName: Microsoft.Xna.Framework.Game.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Initialize
    name: Initialize
    nameWithType: Game.Initialize
    fullName: Microsoft.Xna.Framework.Game.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.Initialize*
  commentId: Overload:Puffin.Infrastructure.MonoGame.PuffinGame.Initialize
  name: Initialize
  nameWithType: PuffinGame.Initialize
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.Initialize
- uid: Microsoft.Xna.Framework.Game.LoadContent
  commentId: M:Microsoft.Xna.Framework.Game.LoadContent
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: LoadContent()
  nameWithType: Game.LoadContent()
  fullName: Microsoft.Xna.Framework.Game.LoadContent()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.LoadContent
    name: LoadContent
    nameWithType: Game.LoadContent
    fullName: Microsoft.Xna.Framework.Game.LoadContent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.LoadContent
    name: LoadContent
    nameWithType: Game.LoadContent
    fullName: Microsoft.Xna.Framework.Game.LoadContent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.LoadContent*
  commentId: Overload:Puffin.Infrastructure.MonoGame.PuffinGame.LoadContent
  name: LoadContent
  nameWithType: PuffinGame.LoadContent
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.LoadContent
- uid: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Update(GameTime)
  nameWithType: Game.Update(GameTime)
  fullName: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    nameWithType: Game.Update
    fullName: Microsoft.Xna.Framework.Game.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    nameWithType: Game.Update
    fullName: Microsoft.Xna.Framework.Game.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.Update*
  commentId: Overload:Puffin.Infrastructure.MonoGame.PuffinGame.Update
  name: Update
  nameWithType: PuffinGame.Update
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
  commentId: M:Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Draw(GameTime)
  nameWithType: Game.Draw(GameTime)
  fullName: Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
    name: Draw
    nameWithType: Game.Draw
    fullName: Microsoft.Xna.Framework.Game.Draw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
    name: Draw
    nameWithType: Game.Draw
    fullName: Microsoft.Xna.Framework.Game.Draw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Puffin.Infrastructure.MonoGame.PuffinGame.Draw*
  commentId: Overload:Puffin.Infrastructure.MonoGame.PuffinGame.Draw
  name: Draw
  nameWithType: PuffinGame.Draw
  fullName: Puffin.Infrastructure.MonoGame.PuffinGame.Draw
