### YamlMime:ManagedReference
items:
- uid: Puffin.Core.Ecs.Components.OverlapComponent
  commentId: T:Puffin.Core.Ecs.Components.OverlapComponent
  id: OverlapComponent
  parent: Puffin.Core.Ecs.Components
  children:
  - Puffin.Core.Ecs.Components.OverlapComponent.#ctor(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{Puffin.Core.Ecs.Entity},System.Action{Puffin.Core.Ecs.Entity})
  langs:
  - csharp
  - vb
  name: OverlapComponent
  nameWithType: OverlapComponent
  fullName: Puffin.Core.Ecs.Components.OverlapComponent
  type: Class
  source:
    remote:
      path: Puffin.Core/Ecs/Components/OverlapComponent.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: OverlapComponent
    path: ../Puffin.Core/Ecs/Components/OverlapComponent.cs
    startLine: 9
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs.Components
  summary: "\nA component for overlapping. Two entities with OverlapComponents will fire events when they overlap each other.\n"
  example: []
  syntax:
    content: 'public class OverlapComponent : Component'
    content.vb: >-
      Public Class OverlapComponent

          Inherits Component
  inheritance:
  - System.Object
  - Puffin.Core.Ecs.Components.Component
  inheritedMembers:
  - Puffin.Core.Ecs.Components.Component.Parent
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Puffin.Core.Ecs.Components.OverlapComponent.#ctor(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{Puffin.Core.Ecs.Entity},System.Action{Puffin.Core.Ecs.Entity})
  commentId: M:Puffin.Core.Ecs.Components.OverlapComponent.#ctor(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{Puffin.Core.Ecs.Entity},System.Action{Puffin.Core.Ecs.Entity})
  id: '#ctor(Puffin.Core.Ecs.Entity,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{Puffin.Core.Ecs.Entity},System.Action{Puffin.Core.Ecs.Entity})'
  parent: Puffin.Core.Ecs.Components.OverlapComponent
  langs:
  - csharp
  - vb
  name: OverlapComponent(Entity, Int32, Int32, Int32, Int32, Action<Entity>, Action<Entity>)
  nameWithType: OverlapComponent.OverlapComponent(Entity, Int32, Int32, Int32, Int32, Action<Entity>, Action<Entity>)
  fullName: Puffin.Core.Ecs.Components.OverlapComponent.OverlapComponent(Puffin.Core.Ecs.Entity, System.Int32, System.Int32, System.Int32, System.Int32, System.Action<Puffin.Core.Ecs.Entity>, System.Action<Puffin.Core.Ecs.Entity>)
  type: Constructor
  source:
    remote:
      path: Puffin.Core/Ecs/Components/OverlapComponent.cs
      branch: docs
      repo: git@github.com:nightblade9/puffin
    id: .ctor
    path: ../Puffin.Core/Ecs/Components/OverlapComponent.cs
    startLine: 32
  assemblies:
  - Puffin.Core
  namespace: Puffin.Core.Ecs.Components
  summary: "\nCreates a mouse component (receives clicks and triggers a callback).\nWidth and height indicate the overlap check area.\nOffsets indicate this component&apos;s offset relative to the origin of the entity.\nThe overlap callbacks trigger when an entity newly starts/stop overlapping with us.\n"
  example: []
  syntax:
    content: public OverlapComponent(Entity parent, int width, int height, int offsetX = 0, int offsetY = 0, Action<Entity> onStartOverlap = null, Action<Entity> onStopOverlap = null)
    parameters:
    - id: parent
      type: Puffin.Core.Ecs.Entity
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    - id: offsetX
      type: System.Int32
    - id: offsetY
      type: System.Int32
    - id: onStartOverlap
      type: System.Action{Puffin.Core.Ecs.Entity}
    - id: onStopOverlap
      type: System.Action{Puffin.Core.Ecs.Entity}
    content.vb: Public Sub New(parent As Entity, width As Integer, height As Integer, offsetX As Integer = 0, offsetY As Integer = 0, onStartOverlap As Action(Of Entity) = Nothing, onStopOverlap As Action(Of Entity) = Nothing)
  overload: Puffin.Core.Ecs.Components.OverlapComponent.#ctor*
  nameWithType.vb: OverlapComponent.OverlapComponent(Entity, Int32, Int32, Int32, Int32, Action(Of Entity), Action(Of Entity))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Puffin.Core.Ecs.Components.OverlapComponent.OverlapComponent(Puffin.Core.Ecs.Entity, System.Int32, System.Int32, System.Int32, System.Int32, System.Action(Of Puffin.Core.Ecs.Entity), System.Action(Of Puffin.Core.Ecs.Entity))
  name.vb: OverlapComponent(Entity, Int32, Int32, Int32, Int32, Action(Of Entity), Action(Of Entity))
references:
- uid: Puffin.Core.Ecs.Components
  commentId: N:Puffin.Core.Ecs.Components
  name: Puffin.Core.Ecs.Components
  nameWithType: Puffin.Core.Ecs.Components
  fullName: Puffin.Core.Ecs.Components
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Puffin.Core.Ecs.Components.Component
  commentId: T:Puffin.Core.Ecs.Components.Component
  parent: Puffin.Core.Ecs.Components
  name: Component
  nameWithType: Component
  fullName: Puffin.Core.Ecs.Components.Component
- uid: Puffin.Core.Ecs.Components.Component.Parent
  commentId: F:Puffin.Core.Ecs.Components.Component.Parent
  parent: Puffin.Core.Ecs.Components.Component
  name: Parent
  nameWithType: Component.Parent
  fullName: Puffin.Core.Ecs.Components.Component.Parent
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Puffin.Core.Ecs.Components.OverlapComponent.#ctor*
  commentId: Overload:Puffin.Core.Ecs.Components.OverlapComponent.#ctor
  name: OverlapComponent
  nameWithType: OverlapComponent.OverlapComponent
  fullName: Puffin.Core.Ecs.Components.OverlapComponent.OverlapComponent
- uid: Puffin.Core.Ecs.Entity
  commentId: T:Puffin.Core.Ecs.Entity
  parent: Puffin.Core.Ecs
  name: Entity
  nameWithType: Entity
  fullName: Puffin.Core.Ecs.Entity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Action{Puffin.Core.Ecs.Entity}
  commentId: T:System.Action{Puffin.Core.Ecs.Entity}
  parent: System
  definition: System.Action`1
  name: Action<Entity>
  nameWithType: Action<Entity>
  fullName: System.Action<Puffin.Core.Ecs.Entity>
  nameWithType.vb: Action(Of Entity)
  fullName.vb: System.Action(Of Puffin.Core.Ecs.Entity)
  name.vb: Action(Of Entity)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Puffin.Core.Ecs.Entity
    name: Entity
    nameWithType: Entity
    fullName: Puffin.Core.Ecs.Entity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Puffin.Core.Ecs.Entity
    name: Entity
    nameWithType: Entity
    fullName: Puffin.Core.Ecs.Entity
  - name: )
    nameWithType: )
    fullName: )
- uid: Puffin.Core.Ecs
  commentId: N:Puffin.Core.Ecs
  name: Puffin.Core.Ecs
  nameWithType: Puffin.Core.Ecs
  fullName: Puffin.Core.Ecs
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
